for (int i = 0; i < spotLightCount; i++)
{
  vec3 dir = spotLightPos[i]-(vec3(Position)/Position.w);
  float dist = length(dir);
  dir /= dist;
  float cosangle = dot(dir, spotLightDir[i]);
  if (cosangle > spotLightCutoff[i])
  {
    float dirdot = max(0.0, (gl_FrontFacing ? 1.0 : -1.0)*dot(dir, Normal));
    float x = spotLightDecayRate[i]*dist;
    float intensity = pow(cosangle, spotLightExponent[i])/(1.0+x+x*x);
    diffuseLight += spotLightColor[i]*dirdot*intensity;
    vec3 hilightDir = normalize(dir+vec3(0.0, 0.0, 1.0));
    float hilightDot = (dirdot == 0.0 ? 0.0 : abs(dot(hilightDir, Normal)));
    hilightLight += intensity*pow(hilightDot, (1.0-roughness)*128.0+1.0);
  }
}
